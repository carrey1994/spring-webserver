name: Java CI with Maven

on:
  push:
    branches: ["main", "dev"]
  pull_request:
    branches: ["main"]

jobs:
  jar:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Setup maven
        uses: actions/setup-java@v4
        with:
          distribution: "zulu" # See 'Supported distributions' for available options
          java-version: "17"
      - name: Jar build
        run: ./mvnw package -DskipTests=true --quiet
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Test api by docker
        run: |
          ./docker-ci-tester.sh
      # - name: Test Report
      #   uses: dorny/test-reporter@v1
      #   if: success() || failure()
      #   with:
      #     name: Jest Report
      #     path: webserver/target/surefire-reports/*.xml
      #     reporter: jest-junit

  spotBugs:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Setup maven
        uses: actions/setup-java@v4
        with:
          distribution: "zulu"
          java-version: "17"
      - name: SpotBugs check
        run: ./mvnw spotbugs:check --quiet

  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Setup maven
        uses: actions/setup-java@v4
        with:
          distribution: "zulu"
          java-version: "17"
      - name: Spotless check
        run: ./mvnw spotless:check --quiet

  security:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      - name: Run Snyk to check for vulnerabilities
        uses: snyk/actions/maven-3-jdk-17@master
        continue-on-error: true
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          args: --sarif-file-output=snyk.sarif
      - name: Upload result to GitHub Code Scanning
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: snyk.sarif

  docker:
    runs-on: ubuntu-latest
    needs:
      - jar
    steps:
      - uses: actions/checkout@v4
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          file: infra/docker/Dockerfile
          push: true
          tags: carrey1994/spring-webserver:latest
